export class Colors {

    private static _SECAM: Array<[number, number[]]> = [
        [0x00, [0x00, 0x00, 0x00]], // #000000
        [0x02, [0x21, 0x21, 0xFF]], // #2121FF
        [0x04, [0xF0, 0x3C, 0x79]], // #F03C79
        [0x06, [0xFF, 0x50, 0xFF]], // #FF50FF
        [0x08, [0x7F, 0xFF, 0x00]], // #7FFF00
        [0x0A, [0x7F, 0xFF, 0xFF]], // #7FFFFF
        [0x0C, [0xFF, 0xFF, 0x3F]], // #FFFF3F
        [0x0E, [0xED, 0xED, 0xED]], // #EDEDED
    ];

    public static NTSC: Array<[number, number[]]> = [
        [0x00, [0x00, 0x00, 0x00]], // #000000
        [0x02, [0x1A, 0x1A, 0x1A]], // #1A1A1A
        [0x04, [0x39, 0x39, 0x39]], // #393939
        [0x06, [0x5B, 0x5B, 0x5B]], // #5B5B5B
        [0x08, [0x7E, 0x7E, 0x7E]], //#7E7E7E
        [0x0A, [0xA2, 0xA2, 0xA2]], // #A2A2A2
        [0x0C, [0xC7, 0xC7, 0xC7]], // #C7C7C7
        [0x0E, [0xED, 0xED, 0xED]], // #EDEDED

        [0x10, [0x19, 0x02, 0x00]], // #190200
        [0x12, [0x3A, 0x1F, 0x00]], // #3A1F00
        [0x14, [0x5D, 0x41, 0x00]], // #5D4100
        [0x16, [0x82, 0x64, 0x00]], // #826400
        [0x18, [0xA7, 0x88, 0x00]], // #A78800
        [0x1A, [0xCC, 0xAD, 0x00]], // #CCAD00
        [0x1C, [0xF2, 0xD2, 0x19]], // #F2D219
        [0x1E, [0xFE, 0xFA, 0x40]], // #FEFA40

        [0x20, [0x37, 0x00, 0x00]], // #370000
        [0x22, [0x5E, 0x08, 0x00]], // #5E0800
        [0x24, [0x83, 0x27, 0x00]], // #832700
        [0x26, [0xA9, 0x49, 0x00]], // #A94900
        [0x28, [0xCF, 0x6C, 0x00]], // #CF6C00
        [0x2A, [0xF5, 0x8F, 0x17]], // #F58F17
        [0x2C, [0xFE, 0xB4, 0x38]], // #FEB438
        [0x2E, [0xFE, 0xDF, 0x6F]], // #FEDF6F

        [0x30, [0x47, 0x00, 0x00]], // #470000
        [0x32, [0x73, 0x00, 0x00]], // #730000
        [0x34, [0x98, 0x13, 0x00]], // #981300
        [0x36, [0xBE, 0x32, 0x16]], // #BE3216
        [0x38, [0xE4, 0x53, 0x35]], // #E45335
        [0x3A, [0xFE, 0x76, 0x57]], // #FE7657
        [0x3C, [0xFE, 0x9C, 0x81]], // #FE9C81
        [0x3E, [0xFE, 0xC6, 0xBB]], // #FEC6BB

        [0x40, [0x44, 0x00, 0x08]], // #440008
        [0x42, [0x6F, 0x00 , 0x1F]], // #6F001F
        [0x44, [0x96, 0x06, 0x40]], // #960640
        [0x46, [0xBB, 0x24, 0x62]], // #BB2462
        [0x48, [0xE1, 0x45, 0x85]], // #E14585
        [0x4A, [0xFE, 0x67, 0xAA]], // #FE67AA
        [0x4C, [0xFE, 0x8C, 0xD6]], // #FE8CD6
        [0x4E, [0xFE, 0xB7, 0xF6]], // #FEB7F6

        [0x50, [0x2D, 0x00, 0x4A]], // #2D004A
        [0x52, [0x57, 0x00, 0x67]], // #570067
        [0x54, [0x7D, 0x05, 0x8C]], // #7D058C
        [0x56, [0xA1, 0x22, 0xB1]], // #A122B1
        [0x58, [0xC7, 0x43, 0xD7]], // #C743D7
        [0x5A, [0xED, 0x65, 0xFE]], // #ED65FE
        [0x5C, [0xFE, 0x8A, 0xF6]], // #FE8AF6
        [0x5E, [0xFE, 0xB5, 0xF7]], // #FEB5F7

        [0x60, [0x0D, 0x00, 0x82]], // #0D0082
        [0x62, [0x33, 0x00, 0xA2]], // #3300A2
        [0x64, [0x55, 0x0F, 0xC9]], // #550FC9
        [0x66, [0x78, 0x2D, 0xF0]], // #782DF0
        [0x68, [0x9C, 0x4E, 0xFE]], // #9C4EFE
        [0x6A, [0xC3, 0x72, 0xFE]], // #C372FE
        [0x6C, [0xEB, 0x98, 0xFE]], // #EB98FE
        [0x6E, [0xFE, 0xC0, 0xF9]], // #FEC0F9

        [0x70, [0x00, 0x00, 0x91]], // #000091
        [0x72, [0x0A, 0x05, 0xBD]], // #0A05BD
        [0x74, [0x28, 0x22, 0xE4]], // #2822E4
        [0x76, [0x48, 0x42, 0xFE]], // #4842FE
        [0x78, [0x6B, 0x64, 0xFE]], // #6B64FE
        [0x7A, [0x90, 0x8A, 0xFE]], // #908AFE
        [0x7C, [0xB7, 0xB0, 0xFE]], // #B7B0FE
        [0x7E, [0xDF, 0xD8, 0xFE]], // #DFD8FE

        [0x80, [0x00, 0x00, 0x72]], // #000072
        [0x82, [0x00, 0x1C, 0xAB]], // #001CAB
        [0x84, [0x03, 0x3C, 0xD6]], // #033CD6
        [0x86, [0x20, 0x5E, 0xFD]], // #205EFD
        [0x88, [0x40, 0x81, 0xFE]], // #4081FE
        [0x8A, [0x64, 0xA6, 0xFE]], // #64A6FE
        [0x8C, [0x89, 0xCE, 0xFE]], // #89CEFE
        [0x8E, [0xB0, 0xF6, 0xFE]], // #B0F6FE

        [0x90, [0x00, 0x10, 0x3A]], // #00103A
        [0x92, [0x00, 0x31, 0x6E]], // #00316E
        [0x94, [0x00, 0x55, 0xA2]], // #0055A2
        [0x96, [0x05, 0x79, 0xC8]], // #0579C8
        [0x98, [0x23, 0x9D, 0xEE]], // #239DEE
        [0x9A, [0x44, 0xC2, 0xFE]], // #44C2FE
        [0x9C, [0x68, 0xE9, 0xFE]], // #68E9FE
        [0x9E, [0x8F, 0xFE, 0xFE]], // #8FFEFE

        [0xA0, [0x00, 0x1F, 0x02]], // #001F02
        [0xA2, [0x00, 0x43, 0x26]], // #004326
        [0xA4, [0x00, 0x69, 0x57]], // #006957
        [0xA6, [0x00, 0x8D, 0x7A]], // #008D7A
        [0xA8, [0x1B, 0xB1, 0x9E]], // #1BB19E
        [0xAA, [0x3B, 0xD7, 0xC3]], // #3BD7C3
        [0xAC, [0x5D, 0xFE, 0xE9]], // #5DFEE9
        [0xAE, [0x86, 0xFE, 0xFE]], // #86FEFE

        [0xB0, [0x00, 0x24, 0x03]], // #002403
        [0xB2, [0x00, 0x4A, 0x05]], // #004A05
        [0xB4, [0x00, 0x70, 0x0C]], // #00700C
        [0xB6, [0x09, 0x95, 0x2B]], // #09952B
        [0xB8, [0x28, 0xBA, 0x4C]], // #28BA4C
        [0xBA, [0x49, 0xE0, 0x6E]], // #49E06E
        [0xBC, [0x6C, 0xFE, 0x92]], // #6CFE92
        [0xBE, [0x97, 0xFE, 0xB5]], // #97FEB5

        [0xC0, [0x00, 0x21, 0x02]], // #002102
        [0xC2, [0x00, 0x40, 0x04]], // #004604
        [0xC4, [0x08, 0x6B, 0x00]], // #086B00
        [0xC6, [0x28, 0x90, 0x00]], // #289000
        [0xC8, [0x49, 0xB5, 0x09]], // #49B509
        [0xCA, [0x6B, 0xDB, 0x28]], // #6BDB28
        [0xCC, [0x8F, 0xFE, 0x49]], // #8FFE49
        [0xCE, [0xBB, 0xFE, 0x69]], // #BBFE69

        [0xD0, [0x00, 0x15, 0x01]], // #001501
        [0xD2, [0x10, 0x36, 0x00]], // #103600
        [0xD4, [0x30, 0x59, 0x00]], // #305900
        [0xD6, [0x53, 0x7E, 0x00]], // #537E00
        [0xD8, [118, 163, 0x00]], // #76A300
        [0xDA, [0x9A, 0xC8, 0x00]], // #9AC800
        [0xDC, [0xBF, 0xEE, 0x1E]], // #BFEE1E
        [0xDE, [0xE8, 0xFE, 0x3E]], // #E8FE3E

        [0xE0, [0x1A, 0x02, 0x00]], // #1A0200
        [0xE2, [0x3B, 0x1F, 0x00]], // #3B1F00
        [0xE4, [0x5E, 0x41, 0x00]], // #5E4100
        [0xE6, [0x83, 0x64, 0x00]], // #836400
        [0xE8, [0xA8, 0x88, 0x00]], // #A88800
        [0xEA, [0xCE, 0xAD, 0x00]], // #CEAD00
        [0xEC, [0xF4, 0xD2, 0x18]], // #F4D218
        [0xEE, [0xFE, 0xFA, 0x40]], // #FEFA40

        [0xF0, [0x38, 0x00, 0x00]], // #380000
        [0xF2, [0x5F, 0x08, 0x00]], // #5F0800
        [0xF4, [0x84, 0x27, 0x00]], // #842700
        [0xF6, [0xAA, 0x49, 0x00]], // #AA4900
        [0xF8, [0xD0, 0x6B, 0x00]], // #D06B00
        [0xFA, [0xF6, 0x8F, 0x18]], // #F68F18
        [0xFC, [0xFE, 0xB4, 0x39]], // #FEB439
        [0xFE, [0xFE, 0xDF, 0x70]] // #FEDF70
    ];

    public static PAL: Array<[number, number[]]> = [
        [0x00, [0x00, 0x00, 0x00]], // #000000
        [0x02, [0x1A, 0x1A, 0x1A]], // #1A1A1A
        [0x04, [0x39, 0x39, 0x39]], // #393939
        [0x06, [0x5B, 0x5B, 0x5B]], // #5B5B5B
        [0x08, [0x7E, 0x7E, 0x7E]], //#7E7E7E
        [0x0A, [0xA2, 0xA2, 0xA2]], // #A2A2A2
        [0x0C, [0xC7, 0xC7, 0xC7]], // #C7C7C7
        [0x0E, [0xED, 0xED, 0xED]], // #EDEDED

        [0x10, [0x00, 0x00, 0x00]], // #000000
        [0x12, [0x1A, 0x1A, 0x1A]], // #1A1A1A
        [0x14, [0x39, 0x39, 0x39]], // #393939
        [0x16, [0x5B, 0x5B, 0x5B]], // #5B5B5B
        [0x18, [0x7E, 0x7E, 0x7E]], //#7E7E7E
        [0x1A, [0xA2, 0xA2, 0xA2]], // #A2A2A2
        [0x1C, [0xC7, 0xC7, 0xC7]], // #C7C7C7
        [0x1E, [0xED, 0xED, 0xED]], // #EDEDED

        [0x20, [0x1E, 0x00, 0x00]], // #1E0000
        [0x22, [0x3F, 0x1C, 0x00]], // #3F1C00
        [0x24, [0x63, 0x3D, 0x00]], // #633D00
        [0x26, [0x88, 0x60, 0x00]], // #886000
        [0x28, [0xAD, 0x83, 0x00]], // #AD8300
        [0x2A, [0xD2, 0xA8, 0x06]], // #D2A806
        [0x2C, [0xF9, 0xCD, 0x26]], // #F9CD26
        [0x2E, [0xFE, 0xF6, 0x4A]], // #FEF64A

        [0x30, [0x00, 0x21, 0x00]], // #002100
        [0x32, [0x00, 0x46, 0x00]], // #004600
        [0x34, [0x0D, 0x6A, 0x00]], // #0D6A00
        [0x36, [0x2D, 0x90, 0x00]], // #2D9000
        [0x38, [0x4F, 0xB5, 0x00]], // #4FB500
        [0x3A, [0x71, 0xDA, 0x06]], // #71DA06
        [0x3C, [0x95, 0xFE, 0x26]], // #95FE26
        [0x3E, [0xC0, 0xFE, 0x4D]], // #C0FE4D

        [0x40, [0x3A, 0x00, 0x00]], // #3A0000
        [0x42, [0x62, 0x06, 0x00]], // #620600
        [0x44, [0x88, 0x25, 0x00]], // #882500
        [0x46, [0xAD, 0x45, 0x00]], // #AD4500
        [0x48, [0xD2, 0x67, 0x1B]], // #D2671B
        [0x4A, [0xF9, 0x8B, 0x3B]], // #F98B3B
        [0x4C, [0xFE, 0xB0, 0x5E]], // #FEB05E
        [0x4E, [0xFE, 0xDB, 0x87]], // #FEDB87

        [0x50, [0x00, 0x25, 0x00]], // #002500
        [0x52, [0x00, 0x4B, 0x00]], // #004B00
        [0x54, [0x00, 0x72, 0x00]], // #007200
        [0x56, [0x0D, 0x96, 0x00]], // #0D9600
        [0x58, [0x2C, 0xBB, 0x1C]], // #2CBB1C
        [0x5A, [0x4E, 0xE1, 0x3D]], // #4EE13D
        [0x5C, [0x70, 0xFE, 0x5F]], // #70FE5F
        [0x5E, [0x9C, 0xFE, 0x8A]], // #9CFE8A

        [0x60, [0x47, 0x00, 0x00]], // #470000
        [0x62, [0x72, 0x00, 0x07]], // #720007
        [0x64, [0x97, 0x0F, 0x25]], // #970F25
        [0x66, [0xBD, 0x2E, 0x45]], // #BD2E45
        [0x68, [0xE3, 0x4F, 0x68]], // #E34F68
        [0x6A, [0xFE, 0x72, 0x8D]], // #FE728B
        [0x6C, [0xFE, 0x98, 0xB2]], // #FE98B2
        [0x6E, [0xFE, 0xC2, 0xDD]], // #FEC2DD

        [0x70, [0x00, 0x21, 0x00]], // #002100
        [0x72, [0x00, 0x45, 0x05]], // #004505
        [0x74, [0x00, 0x6C, 0x26]], // #006C26
        [0x76, [0x00, 0x90, 0x46]], // #009046
        [0x78, [0x1C, 0xB5, 0x69]], // #1CB569
        [0x7A, [0x3D, 0xD8, 0x8C]], // #3DDB8C
        [0x7C, [0x5F, 0xFE, 0xB1]], // #5FFEB1
        [0x7E, [0x88, 0xFE, 0xDD]], // #88FEDD

        [0x80, [0x41, 0x00, 0x26]], // #410026
        [0x82, [0x6C, 0x00, 0x4F]], // #6C004F
        [0x84, [0x92, 0x04, 0x73]], // #920473
        [0x86, [0xB8, 0x22, 0x98]], // #B82298
        [0x88, [0xDE, 0x43, 0xBD]], // #DE43BD
        [0x8A, [0xFE, 0x65, 0xE3]], // #FE65E3
        [0x8C, [0xFE, 0x8A, 0xFE]], // #FE8AFE
        [0x8E, [0xFE, 0xB6, 0xFE]], // #FEB6FE

        [0x90, [0x00, 0x11, 0x2A]], // #00112A
        [0x92, [0x00, 0x34, 0x4F]], // #00344F
        [0x94, [0x00, 0x59, 0x75]], // #005975
        [0x96, [0x04, 0x7C, 0x9A]], // #047C9A
        [0x98, [0x22, 0xA0, 0xBF]], // #22A0BF
        [0x9A, [0x43, 0xC5, 0xE5]], // #43C5E5
        [0x9C, [0x65, 0xEB, 0xFE]], // #65EBFE
        [0x9E, [0x8C, 0xFE, 0xFE]], // #8CFEFE

        [0xA0, [0x2A, 0x00, 0x65]], // #2A0065
        [0xA2, [0x53, 0x00, 0x92]], // #530092
        [0xA4, [0x78, 0x04, 0xB9]], // #7804B9
        [0xA6, [0x9C, 0x22, 0xE0]], // #9C22E0
        [0xA8, [0xC2, 0x42, 0xFE]], // #C242FE
        [0xAA, [0xE8, 0x65, 0xFE]], // #E865FE
        [0xAC, [0xFE, 0x8A, 0xFE]], // #FE8AFE
        [0xAE, [0xFE, 0xB6, 0xFE]], // #FEB6FE

        [0xB0, [0x00, 0x00, 0x6B]], // #00006B
        [0xB2, [0x00, 0x1F, 0x94]], // #001F94
        [0xB4, [0x00, 0x40, 0xBC]], // #0040BC
        [0xB6, [0x1D, 0x62, 0xE2]], // #1D62E2
        [0xB8, [0x3D, 0x85, 0xFE]], // #3D85FE
        [0xBA, [0x5F, 0xA9, 0xFE]], // #5FA9FE
        [0xBC, [0x84, 0xD1, 0xFE]], // #84D1FE
        [0xBE, [0xAB, 0xF9, 0xFE]], // #ABF9FE

        [0xC0, [0x08, 0x00, 0x8E]], // #08008E
        [0xC2, [0x2D, 0x00, 0xBC]], // #2D00BC
        [0xC4, [0x4E, 0x10, 0xE4]], // #4E10E4
        [0xC6, [0x71, 0x2F, 0xFE]], // #712FFE
        [0xC8, [0x95, 0x50, 0xFE]], // #9550FE
        [0xCA, [0xBB, 0x75, 0xFE]], // #BB75FE
        [0xCC, [0xE3, 0x9B, 0xFE]], // #E39BFE
        [0xCE, [0xFE, 0xC2, 0xFE]], // #FEC2FE

        [0xD0, [0x00, 0x00, 0x90]], // #000090
        [0xD2, [0x06, 0x08, 0xBD]], // #0608BD
        [0xD4, [0x24, 0x25, 0xE4]], // #2425E4
        [0xD6, [0x44, 0x45, 0xFE]], // #4445FE
        [0xD8, [0x66, 0x67, 0xFE]], // #6667FE
        [0xDA, [0x8B, 0x8D, 0xFE]], // #8B8DFE
        [0xDC, [191, 0xB3, 0xFE]], // #B2B3FE
        [0xDE, [232, 0xD8, 0xFE]], // #DADBFE

        [0xE0, [0x00, 0x00, 0x00]], // #000000
        [0xE2, [0x1A, 0x1A, 0x1A]], // #1A1A1A
        [0xE4, [0x39, 0x39, 0x39]], // #393939
        [0xE6, [0x5B, 0x5B, 0x5B]], // #5B5B5B
        [0xE8, [0x7E, 0x7E, 0x7E]], //#7E7E7E
        [0xEA, [0xA2, 0xA2, 0xA2]], // #A2A2A2
        [0xEC, [0xC7, 0xC7, 0xC7]], // #C7C7C7
        [0xEE, [0xED, 0xED, 0xED]], // #EDEDED

        [0xF0, [0x00, 0x00, 0x00]], // #000000
        [0xF2, [0x1A, 0x1A, 0x1A]], // #1A1A1A
        [0xF4, [0x39, 0x39, 0x39]], // #393939
        [0xF6, [0x5B, 0x5B, 0x5B]], // #5B5B5B
        [0xF8, [0x7E, 0x7E, 0x7E]], //#7E7E7E
        [0xFA, [0xA2, 0xA2, 0xA2]], // #A2A2A2
        [0xFC, [0xC7, 0xC7, 0xC7]], // #C7C7C7
        [0xFE, [0xED, 0xED, 0xED]], // #EDEDED
    ];

    public static get SECAM() {
        let value: Array<[number, number[]]>  = this._SECAM;

        for(let i = 0x10; i < 0xFF; i += 0x02) {
            value.push([i, value[i % 0x10][1]]);
        };

        return value;
    };
};
